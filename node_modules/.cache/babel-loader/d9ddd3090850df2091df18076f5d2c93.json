{"remainingRequest":"/home/ekaterina/Projects/eng-family/node_modules/babel-loader/lib/index.js!/home/ekaterina/Projects/eng-family/node_modules/eslint-loader/index.js??ref--13-0!/home/ekaterina/Projects/eng-family/src/store/modules/notes.js","dependencies":[{"path":"/home/ekaterina/Projects/eng-family/src/store/modules/notes.js","mtime":1608503391060},{"path":"/home/ekaterina/Projects/eng-family/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ekaterina/Projects/eng-family/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ekaterina/Projects/eng-family/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZSI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2VrYXRlcmluYS9Qcm9qZWN0cy9lbmctZmFtaWx5L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKdmFyIHJlc291cmNlX3VyaSA9ICcvbm90ZXNkYic7CnZhciBjcmVhdGVfdXJpID0gJy9jcmVhdGVub3RlJzsKdmFyIGRlbGV0ZV91cmkgPSAnL2RlbGV0ZW5vdGUnOwp2YXIgdXBkYXRlX3VyaSA9ICcvdXBkYXRlbm90ZSc7CnZhciBwaW5fdXJpX3RvZG9zID0gJy9waW50b2RvJzsKdmFyIHJlc291cmNlX3VyaV9zaG9wcyA9ICcvc2hvcGRiJzsKdmFyIGNyZWF0ZV91cmlfc2hvcCA9ICcvY3JlYXRlc2hvcCc7CnZhciB1cGRhdGVfdXJpX3Nob3AgPSAnL3VwZGF0ZXNob3AnOwp2YXIgcGluX3VyaV9zaG9wID0gJy9waW5zaG9wJzsKdmFyIGRlbGV0ZV91cmlfc2hvcCA9ICcvZGVsZXRlc2hvcCc7CnZhciB1cmwgPSAiIjsKdmFyIHN0YXRlID0gewogIG5vdGVzOiBbXSwKICB0b2RvczogW10sCiAgc2hvcDogW10sCiAgc2VudGVuY2VzOiBbXSwKICBwYXN0U2VudGVuY2VzOiBbXQp9Owp2YXIgZ2V0dGVycyA9IHsKICBhbGxOb3RlczogZnVuY3Rpb24gYWxsTm90ZXMoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5ub3RlczsKICB9LAogIGFsbFNlbnRlbmNlczogZnVuY3Rpb24gYWxsU2VudGVuY2VzKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUuc2VudGVuY2VzOwogIH0sCiAgYWxsU2hvcHM6IGZ1bmN0aW9uIGFsbFNob3BzKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUuc2hvcDsKICB9LAogIGFsbFBhc3RTZW50ZW5jZXM6IGZ1bmN0aW9uIGFsbFBhc3RTZW50ZW5jZXMoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5wYXN0U2VudGVuY2VzOwogIH0KfTsKdmFyIGFjdGlvbnMgPSB7CiAgZmV0Y2hOb3RlczogZnVuY3Rpb24gZmV0Y2hOb3RlcyhfcmVmKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgY29tbWl0LCByZXNwb25zZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQocmVzb3VyY2VfdXJpKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgY29tbWl0KCdzZXROb3RlcycsIHJlc3BvbnNlLmRhdGEpOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgYWRkTm90ZTogZnVuY3Rpb24gYWRkTm90ZShfcmVmMiwgbm90ZSkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgIHZhciBjb21taXQsIHJlc3BvbnNlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLnBvc3QoY3JlYXRlX3VyaSwgbm90ZSk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICBjb21taXQoJ25ld05vdGUnLCByZXNwb25zZS5kYXRhLm5vdGUpOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTIpOwogICAgfSkpKCk7CiAgfSwKICByZW1vdmVOb3RlOiBmdW5jdGlvbiByZW1vdmVOb3RlKF9yZWYzLCBub3RlKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgdmFyIGNvbW1pdDsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmMy5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBheGlvcy5kZWxldGUoZGVsZXRlX3VyaSwgewogICAgICAgICAgICAgICAgZGF0YTogbm90ZQogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIGNvbW1pdCgnZGVsZXRlTm90ZScsIG5vdGUpOwoKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTMpOwogICAgfSkpKCk7CiAgfSwKICBlZGl0Tm90ZTogZnVuY3Rpb24gZWRpdE5vdGUoX3JlZjQsIG5vdGUpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KCkgewogICAgICB2YXIgY29tbWl0OwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWY0LmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLnB1dCh1cGRhdGVfdXJpLCB7CiAgICAgICAgICAgICAgICBkYXRhOiBub3RlCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgY29tbWl0KCd1cGRhdGVOb3RlJywgbm90ZSk7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlNCk7CiAgICB9KSkoKTsKICB9LAogIGZldGNoU2VudGVuY2VzOiBmdW5jdGlvbiBmZXRjaFNlbnRlbmNlcyhfcmVmNSwgdXNlck5hbWUpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU1KCkgewogICAgICB2YXIgY29tbWl0LCByZXNwb25zZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU1JChfY29udGV4dDUpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDUucHJldiA9IF9jb250ZXh0NS5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmNS5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQ1Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQodXJsICsgIi9zZW50ZW5jZXMvIiArIHVzZXJOYW1lKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0NS5zZW50OwogICAgICAgICAgICAgIGNvbW1pdCgnc2V0U2VudGVuY2VzJywgcmVzcG9uc2UuZGF0YSk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlNSk7CiAgICB9KSkoKTsKICB9LAogIGZldGNoUGFzdFNlbnRlbmNlczogZnVuY3Rpb24gZmV0Y2hQYXN0U2VudGVuY2VzKF9yZWY2LCB1c2VyTmFtZSkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTYoKSB7CiAgICAgIHZhciBjb21taXQsIHJlc3BvbnNlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTYkKF9jb250ZXh0NikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Ni5wcmV2ID0gX2NvbnRleHQ2Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWY2LmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dDYubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldCh1cmwgKyAiL3Bhc3RzZW50ZW5jZXMvIiArIHVzZXJOYW1lKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0Ni5zZW50OwogICAgICAgICAgICAgIGNvbW1pdCgnc2V0UGFzdFNlbnRlbmNlcycsIHJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpOwoKICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDYuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTYpOwogICAgfSkpKCk7CiAgfSwKICBhZGRTZW50ZW5jZTogZnVuY3Rpb24gYWRkU2VudGVuY2UoX3JlZjcsIHNlbnQpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU3KCkgewogICAgICB2YXIgY29tbWl0LCByZXNwb25zZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU3JChfY29udGV4dDcpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDcucHJldiA9IF9jb250ZXh0Ny5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmNy5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQ3Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBheGlvcy5wb3N0KHVybCArICIvc2VudGVuY2VzIiwgc2VudCk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDcuc2VudDsKICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhKTsKICAgICAgICAgICAgICBjb21taXQoJ25ld1NlbnRlbmNlJywgcmVzcG9uc2UuZGF0YSk7CgogICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Ny5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlNyk7CiAgICB9KSkoKTsKICB9LAogIHJlbW92ZVNlbnRlbmNlOiBmdW5jdGlvbiByZW1vdmVTZW50ZW5jZShfcmVmOCwgc2VudCkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTgoKSB7CiAgICAgIHZhciBjb21taXQ7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlOCQoX2NvbnRleHQ4KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ4LnByZXYgPSBfY29udGV4dDgubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjguY29tbWl0OwogICAgICAgICAgICAgIF9jb250ZXh0OC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZGVsZXRlKHVybCArICIvc2VudGVuY2VzIiwgewogICAgICAgICAgICAgICAgZGF0YTogc2VudAogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIGNvbW1pdCgnZGVsZXRlU2VudGVuY2UnLCBzZW50KTsKCiAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ4LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWU4KTsKICAgIH0pKSgpOwogIH0sCiAgc2F2ZVNlbnRlbmNlOiBmdW5jdGlvbiBzYXZlU2VudGVuY2UoX3JlZjksIHNlbnQpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU5KCkgewogICAgICB2YXIgY29tbWl0OwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTkkKF9jb250ZXh0OSkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0OS5wcmV2ID0gX2NvbnRleHQ5Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWY5LmNvbW1pdDsKICAgICAgICAgICAgICBjb25zb2xlLmxvZygiaXRlbSB0byBzYXZlIiwgc2VudCk7CiAgICAgICAgICAgICAgX2NvbnRleHQ5Lm5leHQgPSA0OwogICAgICAgICAgICAgIHJldHVybiBheGlvcy5wdXQodXJsICsgIi9zZW50ZW5jZXMiLCB7CiAgICAgICAgICAgICAgICBkYXRhOiBzZW50CiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgY29tbWl0KCd1cGRhdGVTZW50ZW5jZScsIHNlbnQpOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDkuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTkpOwogICAgfSkpKCk7CiAgfSwKICBwaW5Ub2RvOiBmdW5jdGlvbiBwaW5Ub2RvKF9yZWYxMCwgdG9kbykgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTEwKCkgewogICAgICB2YXIgY29tbWl0OwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTEwJChfY29udGV4dDEwKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQxMC5wcmV2ID0gX2NvbnRleHQxMC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmMTAuY29tbWl0OwogICAgICAgICAgICAgIF9jb250ZXh0MTAubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLnB1dChwaW5fdXJpX3RvZG9zLCB7CiAgICAgICAgICAgICAgICBkYXRhOiB0b2RvCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgY29tbWl0KCd1cGRhdGVUb2RvJywgdG9kbyk7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTAuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTEwKTsKICAgIH0pKSgpOwogIH0sCiAgZmV0Y2hTaG9wczogZnVuY3Rpb24gZmV0Y2hTaG9wcyhfcmVmMTEpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUxMSgpIHsKICAgICAgdmFyIGNvbW1pdCwgcmVzcG9uc2U7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMTEkKF9jb250ZXh0MTEpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDExLnByZXYgPSBfY29udGV4dDExLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYxMS5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQxMS5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KHJlc291cmNlX3VyaV9zaG9wcyk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDExLnNlbnQ7CiAgICAgICAgICAgICAgY29tbWl0KCdzZXRTaG9wcycsIHJlc3BvbnNlLmRhdGEpOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDExLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUxMSk7CiAgICB9KSkoKTsKICB9LAogIGFkZFNob3BMaXN0OiBmdW5jdGlvbiBhZGRTaG9wTGlzdChfcmVmMTIsIGxpc3QpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUxMigpIHsKICAgICAgdmFyIGNvbW1pdCwgcmVzcG9uc2U7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMTIkKF9jb250ZXh0MTIpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDEyLnByZXYgPSBfY29udGV4dDEyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYxMi5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQxMi5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gYXhpb3MucG9zdChjcmVhdGVfdXJpX3Nob3AsIGxpc3QpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQxMi5zZW50OwogICAgICAgICAgICAgIGNvbW1pdCgnbmV3U2hvcExpc3QnLCByZXNwb25zZS5kYXRhLnNob3ApOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDEyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUxMik7CiAgICB9KSkoKTsKICB9LAogIHVwZGF0ZVNob3BMaXN0OiBmdW5jdGlvbiB1cGRhdGVTaG9wTGlzdChfcmVmMTMsIGxpc3QpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUxMygpIHsKICAgICAgdmFyIGNvbW1pdDsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUxMyQoX2NvbnRleHQxMykgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0MTMucHJldiA9IF9jb250ZXh0MTMubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjEzLmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dDEzLm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBheGlvcy5wdXQodXBkYXRlX3VyaV9zaG9wLCB7CiAgICAgICAgICAgICAgICBkYXRhOiBsaXN0CiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgY29tbWl0KCd1cGRhdGVTaG9wJywgbGlzdCk7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTMuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTEzKTsKICAgIH0pKSgpOwogIH0sCiAgcGluU2hvcExpc3Q6IGZ1bmN0aW9uIHBpblNob3BMaXN0KF9yZWYxNCwgbGlzdCkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTE0KCkgewogICAgICB2YXIgY29tbWl0OwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTE0JChfY29udGV4dDE0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQxNC5wcmV2ID0gX2NvbnRleHQxNC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmMTQuY29tbWl0OwogICAgICAgICAgICAgIF9jb250ZXh0MTQubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLnB1dChwaW5fdXJpX3Nob3AsIHsKICAgICAgICAgICAgICAgIGRhdGE6IGxpc3QKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICBjb21taXQoJ3VwZGF0ZVNob3AnLCBsaXN0KTsKCiAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQxNC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMTQpOwogICAgfSkpKCk7CiAgfSwKICByZW1vdmVTaG9wTGlzdDogZnVuY3Rpb24gcmVtb3ZlU2hvcExpc3QoX3JlZjE1LCBsaXN0KSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMTUoKSB7CiAgICAgIHZhciBjb21taXQ7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMTUkKF9jb250ZXh0MTUpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDE1LnByZXYgPSBfY29udGV4dDE1Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYxNS5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQxNS5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZGVsZXRlKGRlbGV0ZV91cmlfc2hvcCwgewogICAgICAgICAgICAgICAgZGF0YTogbGlzdAogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIGNvbW1pdCgnZGVsZXRlU2hvcExpc3QnLCBsaXN0KTsKCiAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQxNS5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMTUpOwogICAgfSkpKCk7CiAgfQp9Owp2YXIgbXV0YXRpb25zID0gewogIHNldE5vdGVzOiBmdW5jdGlvbiBzZXROb3RlcyhzdGF0ZSwgbm90ZXMpIHsKICAgIHJldHVybiBzdGF0ZS5ub3RlcyA9IG5vdGVzOwogIH0sCiAgbmV3Tm90ZTogZnVuY3Rpb24gbmV3Tm90ZShzdGF0ZSwgbm90ZSkgewogICAgcmV0dXJuIHN0YXRlLm5vdGVzLnB1c2gobm90ZSk7CiAgfSwKICBkZWxldGVOb3RlOiBmdW5jdGlvbiBkZWxldGVOb3RlKHN0YXRlLCBub3RlKSB7CiAgICB2YXIgaW5kZXggPSBzdGF0ZS5ub3Rlcy5maW5kSW5kZXgoZnVuY3Rpb24gKG4pIHsKICAgICAgcmV0dXJuIG4uX2lkID09IG5vdGUuX2lkOwogICAgfSk7CiAgICBzdGF0ZS5ub3Rlcy5zcGxpY2UoaW5kZXgsIDEpOwogIH0sCiAgdXBkYXRlTm90ZTogZnVuY3Rpb24gdXBkYXRlTm90ZShzdGF0ZSwgbm90ZSkgewogICAgc3RhdGUubm90ZXMuZmluZEluZGV4KGZ1bmN0aW9uIChuKSB7CiAgICAgIHJldHVybiBuLl9pZCA9PSBub3RlLl9pZDsKICAgIH0pOwogIH0sCiAgc2V0U2VudGVuY2VzOiBmdW5jdGlvbiBzZXRTZW50ZW5jZXMoc3RhdGUsIHNlbnQpIHsKICAgIHJldHVybiBzdGF0ZS5zZW50ZW5jZXMgPSBzZW50OwogIH0sCiAgc2V0UGFzdFNlbnRlbmNlczogZnVuY3Rpb24gc2V0UGFzdFNlbnRlbmNlcyhzdGF0ZSwgc2VudCkgewogICAgcmV0dXJuIHN0YXRlLnBhc3RTZW50ZW5jZXMgPSBzZW50OwogIH0sCiAgbmV3U2VudGVuY2U6IGZ1bmN0aW9uIG5ld1NlbnRlbmNlKHN0YXRlLCBzZW50KSB7CiAgICByZXR1cm4gc3RhdGUuc2VudGVuY2VzLnB1c2goc2VudCk7CiAgfSwKICBkZWxldGVTZW50ZW5jZTogZnVuY3Rpb24gZGVsZXRlU2VudGVuY2Uoc3RhdGUsIHNlbnQpIHsKICAgIHZhciBpbmRleCA9IHN0YXRlLnNlbnRlbmNlcy5maW5kSW5kZXgoZnVuY3Rpb24gKHQpIHsKICAgICAgcmV0dXJuIHQuX2lkID09IHNlbnQuX2lkOwogICAgfSk7CiAgICBzdGF0ZS5zZW50ZW5jZXMuc3BsaWNlKGluZGV4LCAxKTsKICB9LAogIHVwZGF0ZVNlbnRlbmNlOiBmdW5jdGlvbiB1cGRhdGVTZW50ZW5jZShzdGF0ZSwgc2VudCkgewogICAgc3RhdGUuc2VudGVuY2VzLmZpbmRJbmRleChmdW5jdGlvbiAodCkgewogICAgICByZXR1cm4gdC5faWQgPT0gc2VudC5faWQ7CiAgICB9KTsKICB9LAogIHNldFNob3BzOiBmdW5jdGlvbiBzZXRTaG9wcyhzdGF0ZSwgc2hvcCkgewogICAgcmV0dXJuIHN0YXRlLnNob3AgPSBzaG9wOwogIH0sCiAgbmV3U2hvcExpc3Q6IGZ1bmN0aW9uIG5ld1Nob3BMaXN0KHN0YXRlLCBsaXN0KSB7CiAgICByZXR1cm4gc3RhdGUuc2hvcC5wdXNoKGxpc3QpOwogIH0sCiAgdXBkYXRlU2hvcDogZnVuY3Rpb24gdXBkYXRlU2hvcChzdGF0ZSwgbGlzdCkgewogICAgc3RhdGUuc2hvcC5maW5kSW5kZXgoZnVuY3Rpb24gKHQpIHsKICAgICAgcmV0dXJuIHQuX2lkID09IGxpc3QuX2lkOwogICAgfSk7CiAgfSwKICBkZWxldGVTaG9wTGlzdDogZnVuY3Rpb24gZGVsZXRlU2hvcExpc3Qoc3RhdGUsIGxpc3QpIHsKICAgIHZhciBpbmRleCA9IHN0YXRlLnNob3AuZmluZEluZGV4KGZ1bmN0aW9uIChzKSB7CiAgICAgIHJldHVybiBzLl9pZCA9PSBsaXN0Ll9pZDsKICAgIH0pOwogICAgc3RhdGUuc2hvcC5zcGxpY2UoaW5kZXgsIDEpOwogIH0KfTsKZXhwb3J0IGRlZmF1bHQgewogIHN0YXRlOiBzdGF0ZSwKICBnZXR0ZXJzOiBnZXR0ZXJzLAogIGFjdGlvbnM6IGFjdGlvbnMsCiAgbXV0YXRpb25zOiBtdXRhdGlvbnMKfTs="},{"version":3,"sources":["/home/ekaterina/Projects/eng-family/src/store/modules/notes.js"],"names":["axios","resource_uri","create_uri","delete_uri","update_uri","pin_uri_todos","resource_uri_shops","create_uri_shop","update_uri_shop","pin_uri_shop","delete_uri_shop","url","state","notes","todos","shop","sentences","pastSentences","getters","allNotes","allSentences","allShops","allPastSentences","actions","fetchNotes","commit","get","response","data","addNote","note","post","removeNote","delete","editNote","put","fetchSentences","userName","fetchPastSentences","console","log","addSentence","sent","removeSentence","saveSentence","pinTodo","todo","fetchShops","addShopList","list","updateShopList","pinShopList","removeShopList","mutations","setNotes","newNote","push","deleteNote","index","findIndex","n","_id","splice","updateNote","setSentences","setPastSentences","newSentence","deleteSentence","t","updateSentence","setShops","newShopList","updateShop","deleteShopList","s"],"mappings":"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","sourcesContent":["import axios from 'axios';\nconst resource_uri = '/notesdb'\nconst create_uri = '/createnote'\nconst delete_uri = '/deletenote'\nconst update_uri = '/updatenote'\nconst pin_uri_todos = '/pintodo'\nconst resource_uri_shops = '/shopdb'\nconst create_uri_shop = '/createshop'\nconst update_uri_shop = '/updateshop'\nconst pin_uri_shop = '/pinshop'\nconst delete_uri_shop = '/deleteshop'\n\nconst url = \"\"\n\n\n\nconst state = {\n\n    notes: [],\n    todos: [],\n    shop: [],\n    sentences: [],\n    pastSentences: []\n\n};\n\nconst getters = {\n    allNotes: (state) => state.notes,\n    allSentences: (state) => state.sentences,\n    allShops: (state) => state.shop,\n    allPastSentences: (state) => state.pastSentences,\n}\n\nconst actions = {\n    async fetchNotes({ commit }) {\n        const response = await axios.get(resource_uri)\n        commit('setNotes', response.data)\n    },\n    async addNote({ commit }, note) {\n        const response = await axios.post(create_uri, note);\n        commit('newNote', response.data.note);\n    },\n    async removeNote({ commit }, note) {\n        await axios.delete(delete_uri, { data: note });\n        commit('deleteNote', note)\n    },\n    async editNote({ commit }, note) {\n        await axios.put(update_uri, { data: note });\n        commit('updateNote', note)\n    },\n\n\n    async fetchSentences({ commit }, userName) {\n        const response = await axios.get(url + \"/sentences/\" + userName)\n        commit('setSentences', response.data)\n    },\n    async fetchPastSentences({ commit }, userName) {\n        const response = await axios.get(url + \"/pastsentences/\" + userName)\n        commit('setPastSentences', response.data)\n        console.log(response.data)\n    },\n    async addSentence({ commit }, sent) {\n        const response = await axios.post(url + \"/sentences\", sent);\n        console.log(response.data)\n        commit('newSentence', response.data);\n    },\n    async removeSentence({ commit }, sent) {\n        await axios.delete(url + \"/sentences\", { data: sent });\n        commit('deleteSentence', sent)\n    },\n    async saveSentence({ commit }, sent) {\n        console.log(\"item to save\", sent)\n        await axios.put(url + \"/sentences\", { data: sent });\n        commit('updateSentence', sent)\n    },\n    async pinTodo({ commit }, todo) {\n        await axios.put(pin_uri_todos, { data: todo });\n        commit('updateTodo', todo)\n    },\n\n    async fetchShops({ commit }) {\n        const response = await axios.get(resource_uri_shops)\n        commit('setShops', response.data)\n    },\n\n    async addShopList({ commit }, list) {\n        const response = await axios.post(create_uri_shop, list);\n        commit('newShopList', response.data.shop);\n    },\n    async updateShopList({ commit }, list) {\n        await axios.put(update_uri_shop, { data: list });\n        commit('updateShop', list)\n    },\n    async pinShopList({ commit }, list) {\n        await axios.put(pin_uri_shop, { data: list });\n        commit('updateShop', list)\n    },\n    async removeShopList({ commit }, list) {\n        await axios.delete(delete_uri_shop, { data: list });\n        commit('deleteShopList', list)\n    },\n\n\n\n};\n\nconst mutations = {\n    setNotes: (state, notes) => state.notes = notes,\n    newNote: (state, note) => state.notes.push(note),\n    deleteNote: (state, note) => {\n        let index = state.notes.findIndex(n => n._id == note._id)\n        state.notes.splice(index, 1)\n    },\n    updateNote: (state, note) => {\n        state.notes.findIndex(n => n._id == note._id)\n    },\n\n    setSentences: (state, sent) => state.sentences = sent,\n    setPastSentences: (state, sent) => state.pastSentences = sent,\n    newSentence: (state, sent) => state.sentences.push(sent),\n    deleteSentence: (state, sent) => {\n        let index = state.sentences.findIndex(t => t._id == sent._id)\n        state.sentences.splice(index, 1)\n    },\n    updateSentence: (state, sent) => {\n        state.sentences.findIndex(t => t._id == sent._id)\n    },\n\n\n    setShops: (state, shop) => state.shop = shop,\n\n    newShopList: (state, list) => state.shop.push(list),\n    updateShop: (state, list) => {\n        state.shop.findIndex(t => t._id == list._id)\n    },\n    deleteShopList: (state, list) => {\n        let index = state.shop.findIndex(s => s._id == list._id)\n        state.shop.splice(index, 1)\n    },\n\n\n}\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations\n};"]}]}